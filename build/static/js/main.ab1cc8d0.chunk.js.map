{"version":3,"sources":["components/card/Card.jsx","components/card-list/CardList.jsx","components/search-box/SearchBox.jsx","styles/GlobalStyles.js","App.js","reportWebVitals.js","index.js"],"names":["CardStyles","styled","div","Card","monster","alt","src","id","name","email","CardListStyles","CardList","monsters","map","SearchBoxStyles","input","SearchBox","placeholder","handleChange","type","onChange","GlobalStyle","createGlobalStyle","App","useState","setMonsters","searchField","setSearchField","filteredMonsters","filter","toLowerCase","includes","toLocaleLowerCase","useEffect","fetch","then","res","json","users","className","e","target","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oqBAGA,IAAMA,EAAaC,IAAOC,IAAV,KAkBHC,EAAO,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAClB,eAACJ,EAAD,WACE,qBACEK,IAAI,UACJC,IAAG,+BAA0BF,EAAQG,GAAlC,4BAEL,6BAAKH,EAAQI,OACb,4BAAIJ,EAAQK,Y,0LCxBhB,IAAMC,EAAiBT,IAAOC,IAAV,KAQPS,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACtB,cAACF,EAAD,UACGE,EAASC,KAAI,SAACT,GAAD,OACZ,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQG,U,wNCZzB,IAAMO,EAAkBb,IAAOc,MAAV,KAURC,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACvB,cAACJ,EAAD,CACEK,KAAK,SACLF,YAAaA,EACbG,SAAUF,K,oSCfP,IAAMG,EAAcC,YAAH,KC+BTC,MA3Bf,WAAgB,IAAD,EACmBC,mBAAS,IAD5B,mBACNZ,EADM,KACIa,EADJ,OAEyBD,mBAAS,IAFlC,mBAENE,EAFM,KAEOC,EAFP,KAIPC,EAAmBhB,EAASiB,QAAO,SAACzB,GAAD,OACvCA,EAAQI,KAAKsB,cAAcC,SAASL,EAAYM,wBASlD,OANAC,qBAAU,WACRC,MAAM,8CACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAWb,EAAYa,QAC9B,IAGD,sBAAKC,UAAU,MAAf,UACE,cAAClB,EAAD,IACA,kDACA,cAAC,EAAD,CACEH,aAAc,SAACsB,GAAD,OAAOb,EAAea,EAAEC,OAAOC,QAC7CzB,YAAY,uBAEd,cAAC,EAAD,CAAUL,SAAUgB,QChBXe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ab1cc8d0.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst CardStyles = styled.div`\n  display: flex;\n  flex-direction: column;\n  background-color: #95dada;\n  border: 1px solid grey;\n  border-radius: 5px;\n  padding: 25px;\n  cursor: pointer;\n  -moz-osx-font-smoothing: grayscale;\n  backface-visibility: hidden;\n  transform: translateZ(0);\n  transition: transform 0.25s ease-out;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n\nexport const Card = ({ monster }) => (\n  <CardStyles>\n    <img\n      alt=\"monster\"\n      src={`https://robohash.org/${monster.id}?set=set2&size=180x180`}\n    />\n    <h2>{monster.name}</h2>\n    <p>{monster.email}</p>\n  </CardStyles>\n);\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Card } from \"../card/Card\";\n\nconst CardListStyles = styled.div`\n  width: 85vw;\n  margin: 0 auto;\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr;\n  grid-gap: 20px;\n`;\n\nexport const CardList = ({ monsters }) => (\n  <CardListStyles>\n    {monsters.map((monster) => (\n      <Card key={monster.id} monster={monster} />\n    ))}\n  </CardListStyles>\n);\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst SearchBoxStyles = styled.input`\n  -webkit-appearance: none;\n  border: none;\n  outline: none;\n  padding: 10px;\n  width: 150px;\n  line-height: 30px;\n  margin-bottom: 30px;\n`;\n\nexport const SearchBox = ({ placeholder, handleChange }) => (\n  <SearchBoxStyles\n    type=\"search\"\n    placeholder={placeholder}\n    onChange={handleChange}\n  />\n);\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\n  body {\n    background: linear-gradient(\n    to left,\n    rgba(7, 27, 82, 1) 0%,\n    rgba(0, 128, 128, 1) 100%\n  );\n  }\n\n  h1 {\n    font-family: 'Bigelow Rules';\n    font-size: 72px;\n    color: #0ccac4;\n  }\n`;\n","import \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport { CardList } from \"./components/card-list/CardList\";\nimport { SearchBox } from \"./components/search-box/SearchBox\";\nimport { GlobalStyle } from \"./styles/GlobalStyles\";\n\nfunction App() {\n  const [monsters, setMonsters] = useState([]);\n  const [searchField, setSearchField] = useState(\"\");\n\n  const filteredMonsters = monsters.filter((monster) =>\n    monster.name.toLowerCase().includes(searchField.toLocaleLowerCase())\n  );\n\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((res) => res.json())\n      .then((users) => setMonsters(users));\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <GlobalStyle />\n      <h1>Monsters Rolodex</h1>\n      <SearchBox\n        handleChange={(e) => setSearchField(e.target.value)}\n        placeholder=\"Search monsters...\"\n      />\n      <CardList monsters={filteredMonsters} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}